defmodule TodoServer do
  def start do
    spawn(fn -> loop(TodoList.new) end)
  end

  def add(todo_server, new_entry) do
    send(todo_server, {:add, new_entry})
  end

  def get(todo_server, date) do
    send(todo_server, {:get, self, date})
    receive do
      {:todo_entries, entries} -> entries
    after 5000 ->
        {:error, :timeout}
    end
  end

  defp loop(todo_list) do
    new_todo_list = receive do
      message -> process_message(todo_list, message)
    end
    loop(new_todo_list)
  end

  defp process_message(todo_list, {:add, new_entry}) do
    TodoList.add(todo_list, new_entry)
  end

  defp process_message(todo_list, {:get, caller, date}) do
    send(caller, {:todo_entries, TodoList.get(todo_list, date)})
    todo_list
  end
end
